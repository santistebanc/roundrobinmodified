/*
 *
 * Todo: move this into its own module.
 *
 */

var fs = require('fs')
  , path = require('path')
  , Sequelize = require('sequelize')
  , lodash = require('lodash')

function filterModels(file) {
  return (file.indexOf('.') !== 0) && (file !== 'index.js')
}

function Database() {
  this.adapters = {};  
}

Database.prototype.createAdapter = function createAdapter(name, connectionString, options, modelsPath) {
  var self = this;
  var sequelize = new Sequelize(connectionString, options);
  var db = {};
  
  function importModel(file) {
    var model = sequelize.import(path.join(modelsPath, file))
    db[model.name] = model;
  }
  
  fs
    .readdirSync(modelsPath)
    .filter(filterModels)
    .forEach(importModel);
  
  function AssociateModel(modelName) {
    if(db[modelName].options.hasOwnProperty('associate')) {
      db[modelName].options.associate(db);
    }
  }
  
  // Associate the models with relationships.
  Object.keys(db)
    .forEach(AssociateModel);
    
  self.adapters[name] = lodash.extend({
    sequelize: sequelize,
    Sequelize: Sequelize
  }, db);
}

Database.prototype.syncAdapters = function(syncOptions) {
  var self = this;
  Object.keys(self.adapters).forEach(function(adapterName){
    var adapter = self.adapters[adapterName];
    adapter
      .sequelize
      .sync(syncOptions)
  })
}

module.exports = function() {
  return new Database();
}
